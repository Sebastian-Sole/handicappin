{
  "id": "d4cf0a72-dd07-4479-96de-94e7bd018c5a",
  "prevId": "2b52bb55-0632-44b4-93cf-5f6b08bb421e",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.course": {
      "name": "course",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "approvalStatus": {
          "name": "approvalStatus",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "country": {
          "name": "country",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "website": {
          "name": "website",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "course_name_key": {
          "name": "course_name_key",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Authenticated users can view courses": {
          "name": "Authenticated users can view courses",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.hole": {
      "name": "hole",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "teeId": {
          "name": "teeId",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "holeNumber": {
          "name": "holeNumber",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "par": {
          "name": "par",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "distance": {
          "name": "distance",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "hcp": {
          "name": "hcp",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "hole_teeId_fkey": {
          "name": "hole_teeId_fkey",
          "tableFrom": "hole",
          "tableTo": "teeInfo",
          "columnsFrom": [
            "teeId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Authenticated users can view holes": {
          "name": "Authenticated users can view holes",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.profile": {
      "name": "profile",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "handicapIndex": {
          "name": "handicapIndex",
          "type": "numeric",
          "primaryKey": false,
          "notNull": true,
          "default": 54
        },
        "verified": {
          "name": "verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "initialHandicapIndex": {
          "name": "initialHandicapIndex",
          "type": "numeric",
          "primaryKey": false,
          "notNull": true,
          "default": 54
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {
        "profile_email_key": {
          "name": "profile_email_key",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "profile_id_fkey": {
          "name": "profile_id_fkey",
          "tableFrom": "profile",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can view their own profile": {
          "name": "Users can view their own profile",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(auth.uid()::uuid = id)"
        },
        "Users can update their own profile": {
          "name": "Users can update their own profile",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(auth.uid()::uuid = id)"
        },
        "Users can insert their own profile": {
          "name": "Users can insert their own profile",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(auth.uid()::uuid = id)"
        },
        "Users can delete their own profile": {
          "name": "Users can delete their own profile",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(auth.uid()::uuid = id)"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.round": {
      "name": "round",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "courseId": {
          "name": "courseId",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "teeId": {
          "name": "teeId",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "teeTime": {
          "name": "teeTime",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "totalStrokes": {
          "name": "totalStrokes",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "parPlayed": {
          "name": "parPlayed",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "adjustedGrossScore": {
          "name": "adjustedGrossScore",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "adjustedPlayedScore": {
          "name": "adjustedPlayedScore",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "courseHandicap": {
          "name": "courseHandicap",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "scoreDifferential": {
          "name": "scoreDifferential",
          "type": "numeric",
          "primaryKey": false,
          "notNull": true
        },
        "existingHandicapIndex": {
          "name": "existingHandicapIndex",
          "type": "numeric",
          "primaryKey": false,
          "notNull": true
        },
        "updatedHandicapIndex": {
          "name": "updatedHandicapIndex",
          "type": "numeric",
          "primaryKey": false,
          "notNull": true
        },
        "exceptionalScoreAdjustment": {
          "name": "exceptionalScoreAdjustment",
          "type": "numeric",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "approvalStatus": {
          "name": "approvalStatus",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "round_courseId_fkey": {
          "name": "round_courseId_fkey",
          "tableFrom": "round",
          "tableTo": "course",
          "columnsFrom": [
            "courseId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "restrict",
          "onUpdate": "cascade"
        },
        "round_userId_fkey": {
          "name": "round_userId_fkey",
          "tableFrom": "round",
          "tableTo": "profile",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "round_teeId_fkey": {
          "name": "round_teeId_fkey",
          "tableFrom": "round",
          "tableTo": "teeInfo",
          "columnsFrom": [
            "teeId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "restrict",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can view their own rounds": {
          "name": "Users can view their own rounds",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(auth.uid()::uuid = userId)"
        },
        "Users can insert their own rounds": {
          "name": "Users can insert their own rounds",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(auth.uid()::uuid = userId)"
        },
        "Users can update their own rounds": {
          "name": "Users can update their own rounds",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(auth.uid()::uuid = userId)"
        },
        "Users can delete their own rounds": {
          "name": "Users can delete their own rounds",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(auth.uid()::uuid = userId)"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.score": {
      "name": "score",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "roundId": {
          "name": "roundId",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "holeId": {
          "name": "holeId",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "strokes": {
          "name": "strokes",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "hcpStrokes": {
          "name": "hcpStrokes",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        }
      },
      "indexes": {},
      "foreignKeys": {
        "score_roundId_fkey": {
          "name": "score_roundId_fkey",
          "tableFrom": "score",
          "tableTo": "round",
          "columnsFrom": [
            "roundId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "score_holeId_fkey": {
          "name": "score_holeId_fkey",
          "tableFrom": "score",
          "tableTo": "hole",
          "columnsFrom": [
            "holeId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "restrict",
          "onUpdate": "cascade"
        },
        "score_userId_fkey": {
          "name": "score_userId_fkey",
          "tableFrom": "score",
          "tableTo": "profile",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can view their own scores": {
          "name": "Users can view their own scores",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(auth.uid()::uuid = userId)"
        },
        "Users can insert their own scores": {
          "name": "Users can insert their own scores",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(auth.uid()::uuid = userId)"
        },
        "Users can update their own scores": {
          "name": "Users can update their own scores",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(auth.uid()::uuid = userId)"
        },
        "Users can delete their own scores": {
          "name": "Users can delete their own scores",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(auth.uid()::uuid = userId)"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.teeInfo": {
      "name": "teeInfo",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "courseId": {
          "name": "courseId",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "gender": {
          "name": "gender",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "courseRating18": {
          "name": "courseRating18",
          "type": "numeric",
          "primaryKey": false,
          "notNull": true
        },
        "slopeRating18": {
          "name": "slopeRating18",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "courseRatingFront9": {
          "name": "courseRatingFront9",
          "type": "numeric",
          "primaryKey": false,
          "notNull": true
        },
        "slopeRatingFront9": {
          "name": "slopeRatingFront9",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "courseRatingBack9": {
          "name": "courseRatingBack9",
          "type": "numeric",
          "primaryKey": false,
          "notNull": true
        },
        "slopeRatingBack9": {
          "name": "slopeRatingBack9",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "outPar": {
          "name": "outPar",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "inPar": {
          "name": "inPar",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "totalPar": {
          "name": "totalPar",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "outDistance": {
          "name": "outDistance",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "inDistance": {
          "name": "inDistance",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "totalDistance": {
          "name": "totalDistance",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "distanceMeasurement": {
          "name": "distanceMeasurement",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'yards'"
        },
        "approvalStatus": {
          "name": "approvalStatus",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "isArchived": {
          "name": "isArchived",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "version": {
          "name": "version",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        }
      },
      "indexes": {},
      "foreignKeys": {
        "teeInfo_courseId_fkey": {
          "name": "teeInfo_courseId_fkey",
          "tableFrom": "teeInfo",
          "tableTo": "course",
          "columnsFrom": [
            "courseId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Authenticated users can view tee info": {
          "name": "Authenticated users can view tee info",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.users": {
      "name": "users",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}