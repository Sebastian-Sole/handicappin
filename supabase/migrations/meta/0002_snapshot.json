{
  "id": "8fbab21b-d897-4615-bffc-bbb22ebd402b",
  "prevId": "6b9d62f0-618b-47f0-9df6-f1968d781ba4",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.Course": {
      "name": "Course",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "isApproved": {
          "name": "isApproved",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        }
      },
      "indexes": {
        "Course_name_key": {
          "name": "Course_name_key",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Enable insert for authenticated users only": {
          "name": "Enable insert for authenticated users only",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "true"
        },
        "Enable read access for all users": {
          "name": "Enable read access for all users",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.Hole": {
      "name": "Hole",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "teeId": {
          "name": "teeId",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "holeNumber": {
          "name": "holeNumber",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "par": {
          "name": "par",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "hcp": {
          "name": "hcp",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "distance": {
          "name": "distance",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "Hole_teeId_fkey": {
          "name": "Hole_teeId_fkey",
          "tableFrom": "Hole",
          "tableTo": "TeeInfo",
          "columnsFrom": [
            "teeId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Enable insert for authenticated users only": {
          "name": "Enable insert for authenticated users only",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "true"
        },
        "Enable read access for all users": {
          "name": "Enable read access for all users",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.Profile": {
      "name": "Profile",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "handicapIndex": {
          "name": "handicapIndex",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true
        },
        "verified": {
          "name": "verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        }
      },
      "indexes": {
        "Profile_email_key": {
          "name": "Profile_email_key",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "Profile_id_fkey": {
          "name": "Profile_id_fkey",
          "tableFrom": "Profile",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Allow profile updates for authed users": {
          "name": "Allow profile updates for authed users",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ],
          "using": "(auth.uid() = id)"
        },
        "Enable delete for users based on their own user_id": {
          "name": "Enable delete for users based on their own user_id",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ],
          "using": "(auth.uid() = id)"
        },
        "Enable insert for authenticated users only": {
          "name": "Enable insert for authenticated users only",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "true"
        },
        "Enable users to view their own data only": {
          "name": "Enable users to view their own data only",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(auth.uid() = id)"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.Round": {
      "name": "Round",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "teeTime": {
          "name": "teeTime",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "courseId": {
          "name": "courseId",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "teeId": {
          "name": "teeId",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "existingHandicapIndex": {
          "name": "existingHandicapIndex",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true
        },
        "updatedHandicapIndex": {
          "name": "updatedHandicapIndex",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "scoreDifferential": {
          "name": "scoreDifferential",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true
        },
        "totalStrokes": {
          "name": "totalStrokes",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "adjustedGrossScore": {
          "name": "adjustedGrossScore",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "parPlayed": {
          "name": "parPlayed",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "exceptionalScoreAdjustment": {
          "name": "exceptionalScoreAdjustment",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        }
      },
      "indexes": {},
      "foreignKeys": {
        "Round_courseId_fkey": {
          "name": "Round_courseId_fkey",
          "tableFrom": "Round",
          "tableTo": "Course",
          "columnsFrom": [
            "courseId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "Round_userId_fkey": {
          "name": "Round_userId_fkey",
          "tableFrom": "Round",
          "tableTo": "Profile",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "Round_teeId_fkey": {
          "name": "Round_teeId_fkey",
          "tableFrom": "Round",
          "tableTo": "TeeInfo",
          "columnsFrom": [
            "teeId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Enable insert for users based on userId": {
          "name": "Enable insert for users based on userId",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(( SELECT auth.uid()) = \"userId\")"
        },
        "Enable users to view their own data only": {
          "name": "Enable users to view their own data only",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(( SELECT auth.uid()) = \"userId\")"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.Score": {
      "name": "Score",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "roundId": {
          "name": "roundId",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "holeId": {
          "name": "holeId",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "strokes": {
          "name": "strokes",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "hcpStrokes": {
          "name": "hcpStrokes",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "Score_roundId_fkey": {
          "name": "Score_roundId_fkey",
          "tableFrom": "Score",
          "tableTo": "Round",
          "columnsFrom": [
            "roundId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "Score_holeId_fkey": {
          "name": "Score_holeId_fkey",
          "tableFrom": "Score",
          "tableTo": "Hole",
          "columnsFrom": [
            "holeId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "Score_userId_fkey": {
          "name": "Score_userId_fkey",
          "tableFrom": "Score",
          "tableTo": "Profile",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Enable insert for users based on userId": {
          "name": "Enable insert for users based on userId",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(( SELECT auth.uid()) = \"userId\")"
        },
        "Enable users to view their own data only": {
          "name": "Enable users to view their own data only",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(auth.uid() = \"userId\")"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.TeeInfo": {
      "name": "TeeInfo",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "courseId": {
          "name": "courseId",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "gender": {
          "name": "gender",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "numberOfHoles": {
          "name": "numberOfHoles",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "courseRating18": {
          "name": "courseRating18",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true
        },
        "slopeRating18": {
          "name": "slopeRating18",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "courseRatingFront9": {
          "name": "courseRatingFront9",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true
        },
        "slopeRatingFront9": {
          "name": "slopeRatingFront9",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "courseRatingBack9": {
          "name": "courseRatingBack9",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true
        },
        "slopeRatingBack9": {
          "name": "slopeRatingBack9",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "outPar": {
          "name": "outPar",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "inPar": {
          "name": "inPar",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "totalPar": {
          "name": "totalPar",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "outDistance": {
          "name": "outDistance",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "inDistance": {
          "name": "inDistance",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "totalDistance": {
          "name": "totalDistance",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "distanceMeasurement": {
          "name": "distanceMeasurement",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'meters'"
        },
        "isApproved": {
          "name": "isApproved",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "isArchived": {
          "name": "isArchived",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "version": {
          "name": "version",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        }
      },
      "indexes": {},
      "foreignKeys": {
        "TeeInfo_courseId_fkey": {
          "name": "TeeInfo_courseId_fkey",
          "tableFrom": "TeeInfo",
          "tableTo": "Course",
          "columnsFrom": [
            "courseId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Enable insert for authenticated users only": {
          "name": "Enable insert for authenticated users only",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "true"
        },
        "Enable read access for all users": {
          "name": "Enable read access for all users",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.users": {
      "name": "users",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}